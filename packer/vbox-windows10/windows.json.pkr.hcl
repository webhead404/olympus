packer {
  required_plugins {
    vagrant = {
      source  = "github.com/hashicorp/vagrant"
      version = "~> 1"
    }
    virtualbox = {
      source  = "github.com/hashicorp/virtualbox"
      version = "~> 1"
    }
  }
}

variable "iso_md5" {
  type    = string
  default = "e85637e135e9b6dbc5fa02b463a95764"
}

variable "iso_path" {
  type    = string
  default = "https://software-download.microsoft.com/download/pr/19041.264.200511-0456.vb_release_svc_refresh_CLIENTENTERPRISEEVAL_OEMRET_x64FRE_en-us.iso"
}

locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

source "virtualbox-iso" "autogenerated_1" {
  communicator         = "winrm"
  disk_size            = 61440
  floppy_files         = ["Autounattend.xml", "update-windows.ps1", "configure-winrm.ps1"]
  guest_additions_mode = "upload"
  guest_additions_path = "c:/Windows/Temp/windows.iso"
  guest_os_type        = "Windows10_64"
  hard_drive_interface = "sata"
  headless             = true
  iso_checksum         = "md5:${var.iso_md5}"
  iso_interface        = "sata"
  iso_url              = "${var.iso_path}"
  shutdown_command     = "shutdown /s /t 0 /f /d p:4:1 /c \"Packer Shutdown\""
  vboxmanage           = [["modifyvm", "{{ .Name }}", "--memory", "4096"], ["modifyvm", "{{ .Name }}", "--cpus", "2"], ["modifyvm", "{{ .Name }}", "--vram", "32"]]
  winrm_insecure       = true
  winrm_password       = "vagrant"
  winrm_timeout        = "6h"
  winrm_username       = "vagrant"
}

build {
  sources = ["source.virtualbox-iso.autogenerated_1"]

  provisioner "powershell" {
    scripts = [
      "./scripts/install-guest-tools.ps1", 
      "./scripts/enable-rdp.ps1", 
      "./scripts/disable-hibernate.ps1", 
      "./scripts/disable-autologin.ps1", 
      "./scripts/disable-uac.ps1", 
      "./scripts/no-expiration.ps1", 
      "./scripts/install-openjdk.ps1", 
      "./scripts/install-choco.ps1", 
      "./scripts/install-sysmon.ps1", 
      "./scripts/install-pwshssh.ps1", 
      "./scripts/install-advaudit.ps1", 
      "./scripts/disable-windef.ps1", 
      "./scripts/fix-invokeweb-secure-channel.ps1", 
      "./scripts/install-shutup10.ps1", 
      "./scripts/cleanout.ps1", 
      "./scripts/debloater.ps1"
      ]
  }

  provisioner "windows-restart" {
    restart_check_command = "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot complete'}}\""
    restart_command       = "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\""
  }

  provisioner "powershell" {
    scripts = ["./scripts/cleanup.ps1"]
  }

  post-processor "vagrant" {
    compression_level = "8"
    output            = "../_output/{{ .Provider }}-dev-windows10-${local.timestamp}.box"
  }
}
