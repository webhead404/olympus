packer {
  required_plugins {
    ansible = {
      source  = "github.com/hashicorp/ansible"
      version = "~> 1"
    }
    vagrant = {
      source  = "github.com/hashicorp/vagrant"
      version = "~> 1"
    }
    virtualbox = {
      source  = "github.com/hashicorp/virtualbox"
      version = "~> 1"
    }
  }
}

variable "version" {
  type    = string
  default = "7.0.22"
}

locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

source "virtualbox-iso" "autogenerated_1" {
  boot_command            = ["<up><wait><tab> inst.text inst.ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/http/ks.cfg<enter><wait>"]
  boot_wait               = "10s"
  disk_size               = 81920
  guest_additions_path    = "VBoxGuestAdditions_{{ .Version }}.iso"
  guest_os_type           = "RedHat_64"
  headless                = true
  http_directory          = "http"
  iso_checksum            = "file:https://download.rockylinux.org/pub/rocky/8/isos/x86_64/CHECKSUM"
  iso_urls                = ["Rocky-8.7-x86_64-minimal.iso", "https://download.rockylinux.org/pub/rocky/8/isos/x86_64/Rocky-8.7-x86_64-minimal.iso"]
  shutdown_command        = "echo 'vagrant'|sudo -S /sbin/halt -h -p"
  ssh_password            = "vagrant"
  ssh_port                = 22
  ssh_username            = "vagrant"
  ssh_wait_timeout        = "1800s"
  vboxmanage              = [["modifyvm", "{{ .Name }}", "--memory", "4096"], ["modifyvm", "{{ .Name }}", "--cpus", "2"]]
  virtualbox_version_file = ".vbox_version"
  vm_name                 = "packer-elastic"
}

build {
  sources = ["source.virtualbox-iso.autogenerated_1"]

  provisioner "shell" {
    environment_vars  = ["HOME_DIR=/home/vagrant"]
    execute_command   = "echo 'vagrant' | {{ .Vars }} sudo -S -E sh -eux '{{ .Path }}'"
    expect_disconnect = true
    scripts           = 
      [
      "scripts/update.sh", 
      "scripts/sshd.sh", 
      "scripts/networking.sh", 
      "scripts/sudoers.sh", 
      "scripts/vagrant.sh", 
      "scripts/systemd.sh", 
      "scripts/virtualbox.sh", 
      "scripts/selinux.sh"
      ]
  }

  provisioner "ansible" {
    playbook_file = "ansible/elastic-playbook.yml"
  }

  provisioner "shell" {
    execute_command = "echo 'packer' | sudo -S sh -c '{{ .Vars }} {{ .Path }}'"
    scripts         = "scripts/cleanup.sh"
  }

  post-processor "vagrant" {
    compression_level = "8"
    output            = "../_output/{{ .Provider }}-dev-elastic-${local.timestamp}.box"
  }
}
