
Vagrant.configure("2") do |config|

  config.vm.define "ts.elastic", primary: true do |cfg|
    cfg.vm.box = "bento/rockylinux-9"
    #cfg.vm.box_version = "1.2.0"
    cfg.vm.hostname = "elastic"
    cfg.disksize.size = "256GB"
    cfg.vm.synced_folder '.', '/vagrant', disabled: false
    cfg.vm.network "private_network", ip: "192.168.56.10", auto_config: true
    cfg.vm.network "forwarded_port", guest: 5601, host: 5601
    cfg.vm.network "forwarded_port", guest: 9200, host: 9200
    cfg.vm.provider :virtualbox do |vb|
      vb.name = "ts.elastomic"
      vb.memory = 4096
      vb.cpus = 2
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end


    # Fix Local DNS
    #cfg.vm.provision "set-hosts-file", type: "shell", inline: "printf '\n127.0.0.1  elastic' >> /etc/hosts"

    # Enable PowerShell
    cfg.vm.provision "enable-psremoting", type: "shell", path: "../vagrant/scripts/enable-psremoting.sh"

    cfg.vm.provision "download_container-project", type: "shell", path: "../vagrant/scripts/download-elastic-containers.sh"

    #cfg.vm.provision "start_ecp", type: "shell", inline: <<-SHELL
    #cd /home/vagrant/elastic-container
    #chmod +x /home/vagrant/elastic-container/elastic-container.sh
    #bash ./elastic-container.sh start
    #SHELL


    # Setup Disk so we have more room to put elastic stack
    #cfg.vm.provision "setdisk", type: "shell", path: "../vagrant/scripts/setup-disk.sh"

    # Fix network interface
    #cfg.vm.provision "set_interface", type: "shell", path: "../vagrant/scripts/set_interface.sh"



    # Setup Fleet server
    #cfg.vm.provision "shell" do |s|
    #  s.path = "../vagrant/scripts/install-fleet-server.sh"
    #  s.env = {
    #      "ELASTIC_STACK_VERSION" => "8.7.0",
    #      "KIBANA_URL" => "http://192.168.56.10:5601",
    #      "KIBANA_AUTH" => "vagrant:vagrant",
    #      "ELASTICSEARCH_URL" => "https://192.168.56.10:9200"
    #  }
    #end

    # Setup the Elastic Stack
    cfg.vm.provision "shell" do |s2|
      s2.path = "../vagrant/scripts/setup-elastic.sh"
      s2.env = {
        "ELASTIC_STACK_VERSION" => "8.7.0",
        "KIBANA_URL" => "https://192.168.56.10:5601",
        "KIBANA_AUTH" => "elastic:vagrant",
        "ELASTICSEARCH_URL" => "https://192.168.56.10:9200",
        "FLEET_SERVER_URL" => "https://192.168.56.10:8220"
      }
    end
  end



  config.vm.define "ts.windows10" do |cfg|
    cfg.vm.box = "peru/windows-10-enterprise-x64-eval"
    #cfg.vm.box_version = "1.2.0"
    cfg.vm.hostname = "windows10"

    cfg.vm.network "private_network", ip: "192.168.56.11", auto_config: true

    config.vm.network "forwarded_port", guest: 3389, host: 33389, auto_correct: true
    config.vm.network "forwarded_port", guest: 5985, host: 55985, auto_correct: true
    
    cfg.vm.provider :virtualbox do |vb|
      vb.name = "ts.windows10"
      vb.memory = 2048
      vb.cpus = 2
    end

    cfg.vm.provision "exprfix", type: "shell", path: "../vagrant/scripts/fix-windows-expiration.ps1"
    cfg.vm.provision "exprfix", type: "shell", path: "../vagrant/scripts/install-choco.ps1"
    cfg.vm.provision "exprfix", type: "shell", path: "../vagrant/scripts/install-pwshssh.ps1"
    #cfg.vm.provision "shutup10", type: "shell", path: "../vagrant/scripts/install-shutup10config.ps1"
    cfg.vm.provision "shell" do |s|
      s.path = "../vagrant/scripts/install-ea.ps1"
      s.env = {
        "ELASTIC_STACK_VERSION" => '8.7.0',
        "KIBANA_URL" => 'https://192.168.56.10:5601',
        "KIBANA_AUTH" => 'elastic:vagrant',
        "ELASTICSEARCH_URL" => 'https://192.168.56.10:9200',
        "FLEET_SERVER_URL" => 'https://192.168.56.10:8220'
      }
    end
  end
    #cfg.vm.provision "download-install-pneuma-windows", type: "shell", path: "../vagrant/scripts/download-pneuma-windows.ps1"
  #end



  config.vm.define "ts.rocky9" do |cfg|
    cfg.vm.box = "bento/rockylinux-9"
    #cfg.vm.box_version = "1.2.0"
    cfg.vm.hostname = "rocky9"
    cfg.vm.synced_folder '.', '/vagrant', disabled: true
    cfg.vm.network "private_network", ip: "192.168.56.12", auto_config: true
    cfg.vm.network "forwarded_port", guest: 80, host: 8080
    cfg.vm.provider :virtualbox do |vb|
      vb.name = "ts.rocky9"
      vb.memory = 1024
      vb.cpus = 1
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end

    # Fix Local DNS
    #cfg.vm.provision "set-hosts-file", type: "shell", inline: "printf '\n127.0.0.1  debian11' >> /etc/hosts"

    # Setup Pneuma agent and service
    #cfg.vm.provision "download-install-pneuma-linux", type: "shell", path: "../vagrant/scripts/download-pneuma-linux.sh"

    # Setup Auditbeat
    #cfg.vm.provision "filebeatsetup", type: "shell", path: "../vagrant/scripts/setup-linux-beats.sh"

    # Enable PowerShell Remoting

    cfg.vm.provision "enable-psremoting", type: "shell", path: "../vagrant/scripts/enable-psremoting.sh"

    # Install and Enroll Elastic Agent
    cfg.vm.provision "shell" do |s|
      s.path = "../vagrant/scripts/install-ea-linux.sh"
      s.env = {
        "ELASTIC_STACK_VERSION" => "8.7.0",
        "KIBANA_URL" => "https://192.168.56.10:5601",
        "KIBANA_AUTH" => "elastic:vagrant",
        "ELASTICSEARCH_URL" => "https://192.168.56.10:9200",
        "FLEET_SERVER_URL" => "https://192.168.56.10:8220"
      }
    end
  end
    # Setup Disk so we have more room
    #cfg.vm.provision "setdisk", type: "shell", path: "../vagrant/scripts/setup-disk.sh"



  #config.vm.define "ts.redops" do |cfg|
    #cfg.vm.box = "redops"
    #cfg.vm.box_version = "1.2.0"
    #cfg.vm.hostname = "redops"
    #cfg.vm.synced_folder ".", "/vagrant", type: "rsync"
    #cfg.vm.network "private_network", ip: "192.168.56.13", auto_config: true
    #cfg.vm.network "forwarded_port", guest: 3389, host: 43389
    #cfg.vm.network "forwarded_port", guest: 50051, host: 50052
    #cfg.vm.network "forwarded_port", guest: 8888, host: 8889


    #cfg.vm.provider :virtualbox do |vb|
    #  vb.name = "ts.redops"
    #  vb.memory = 2048
    #  vb.cpus = 2
    #  vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    #end

    # Fix Local DNS
    #cfg.vm.provision "set-hosts-file", type: "shell", inline: "printf '\n127.0.0.1  redops' >> /etc/hosts"

    #cfg.vm.provision "set-operator-vars", type: "shell", inline: $set_operator_variables, run: "always"

    #cfg.vm.provision "install-operator-headless", type: "shell", path: "../vagrant/scripts/install-headless.sh"
    #cfg.vm.provision "set-go-vars", type: "shell", inline: <<-SHELL
    #echo -n                                          >  /etc/profile.d/gopath.sh
    #echo 'export GOROOT=/usr/local/go'                 >> /etc/profile.d/gopath.sh
    #echo 'export GOPATH=/home/vagrant/go'             >> /etc/profile.d/gopath.sh
    #echo 'export PATH=$PATH:$GOROOT/bin:$GOPATH/bin' >> /etc/profile.d/gopath.sh
#SHELL


    

    #cfg.vm.provision "compile-and-stage-agents", type: "shell", path: "../vagrant/scripts/garble.sh", privileged: false
  #end

    # Install Operator
    #cfg.vm.provision "install-operator", type: "shell", path: "../vagrant/scripts/install-operator.sh"
end